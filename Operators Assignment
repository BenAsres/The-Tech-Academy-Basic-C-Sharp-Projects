using System;

namespace EmployeeApp
{
    // Define the Employee class with properties Id, FirstName, and LastName
    class Employee
    {
        // Properties of the Employee class
        public int Id { get; set; }          // The unique ID of the employee
        public string FirstName { get; set; } // The first name of the employee
        public string LastName { get; set; }  // The last name of the employee

        // Overload the "==" operator to compare two Employee objects
        public static bool operator ==(Employee emp1, Employee emp2)
        {
            // Check if both objects are the same reference (optimization)
            if (ReferenceEquals(emp1, emp2)) return true;

            // If either object is null, return false
            if (emp1 == null || emp2 == null) return false;

            // Compare the Id properties of both Employee objects
            return emp1.Id == emp2.Id;
        }

        // Overload the "!=" operator to complement the "==" operator
        public static bool operator !=(Employee emp1, Employee emp2)
        {
            // The "!=" operator should return the opposite of the "==" operator
            return !(emp1 == emp2);
        }

        // Override the Equals method to ensure consistency with "==" operator
        public override bool Equals(object obj)
        {
            // Check if the object is an Employee and compare their Ids
            if (obj is Employee otherEmployee)
            {
                return this.Id == otherEmployee.Id;
            }
            return false;
        }

        // Override GetHashCode to ensure consistency with Equals
        public override int GetHashCode()
        {
            // Return the Id's hash code, as it's the primary identifier for the Employee
            return Id.GetHashCode();
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            // Instantiate two Employee objects and assign values to their properties
            Employee emp1 = new Employee
            {
                Id = 1,
                FirstName = "John",
                LastName = "Doe"
            };

            Employee emp2 = new Employee
            {
                Id = 2,
                FirstName = "Jane",
                LastName = "Smith"
            };

            // Display the details of the employees
            Console.WriteLine($"Employee 1: {emp1.FirstName} {emp1.LastName}, ID: {emp1.Id}");
            Console.WriteLine($"Employee 2: {emp2.FirstName} {emp2.LastName}, ID: {emp2.Id}");

            // Compare the two Employee objects using the overloaded "==" operator
            if (emp1 == emp2)
            {
                Console.WriteLine("Employee 1 and Employee 2 are the same.");
            }
            else
            {
                Console.WriteLine("Employee 1 and Employee 2 are different.");
            }

            // Compare the two Employee objects using the overloaded "!=" operator
            if (emp1 != emp2)
            {
                Conso
